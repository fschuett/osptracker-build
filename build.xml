<?xml version="1.0"?>
<!DOCTYPE project>
<project name="tracker" default="tracker_jar" basedir=".\">
	<property name="vesrc" value="video-engines/src" />
	<property name="ospsrc" value="osp/src" />
	<property name="trackersrc" value="tracker/src" />
	<property name="build" value="build" />
	<property name="classes" value="${build}/classes" />
	<property name="lib" value="${build}/jars" />
	<property name="docs" value="${build}/docs" />
	<property name="author" value="Douglas Brown" />
	<path id="qtjava.zip" location="libraries/QTJava.zip" />
	<path id="ffmpeg.jar" location="libraries/ffmpeg-4.0.jar" />
	<path id="bridj.jar" location="libraries/bridj-0.7-SNAPSHOT.jar"/>
	<path id="apple.jar" location="libraries/AppleJavaExtensions.jar" />

	<tstamp>
		<format property="buildtime.isoformat" pattern="yyyy-MM-dd 'T'HH:mm:ss"/>
	</tstamp>

	<!--help: list important targets-->
	<target name="help">
		<echo>clean: removes old build files</echo>
		<echo>init: creates the build directories</echo>
		<echo>compile: compiles the OSP and Tracker libraries</echo>
		<echo>tracker_jar: creates the tracker.jar file</echo>
		<echo>docs: creates javadoc documentation</echo>
	</target>

	<!--clean: delete the build directory-->
	<target name="clean">
		<delete dir="${build}"/>
	</target>

	<!--init: create the build directory-->
	<target name="init">
		<mkdir dir="${build}"/>
	</target>

	<!--compile: clean and recompile the source files-->
	<target name="compile" depends="init">
		<delete dir="${classes}/meta-inf"/>
		<mkdir dir="${classes}"/>
		<mkdir dir="${classes}/meta-inf"/>
		<javac destdir="${classes}" source="1.6" target="1.8" debug="true" debuglevel="lines,vars,source" includeantruntime="false" encoding="Cp1252">
			<src path="video-engines/src"/>
			<src path="tracker/src"/>
			<src path="osp/src"/>
			<compilerarg value="-Xlint:-serial"/>
			<classpath refid="qtjava.zip"/>
			<classpath refid="ffmpeg.jar"/>
			<classpath refid="bridj.jar"/>
			<classpath refid="apple.jar"/>
		</javac>
		<copy todir="${classes}/org/opensourcephysics/resources">
			<fileset dir="${ospsrc}/org/opensourcephysics/resources"/>
		</copy>
		<copy todir="${classes}/org/opensourcephysics/cabrillo/tracker/resources">
			<fileset dir="${trackersrc}/org/opensourcephysics/cabrillo/tracker/resources"/>
		</copy>
	</target>

	<!--tracker_jar: create the tracker.jar file-->
	<target name="tracker_jar" depends="compile">
		<mkdir dir="${lib}"/>
		<manifest file="${classes}/meta-inf/TRACKER.mf">
			<attribute name="Built-By" value="${author}"/>
			<attribute name="Built-On" value="${buildtime.isoformat}"/>
			<attribute name="Main-Class" value="org.opensourcephysics.cabrillo.tracker.Tracker"/>
		</manifest >
		<jar jarfile="${lib}/tracker.jar" basedir="${classes}" manifest="${classes}/meta-inf/TRACKER.mf" includes="**/epsgraphics/,
            **/controls/,
            **/davidson/,
            **/display/,
            **/ejs/EjsRes.class,
            **/numerics/,
            **/tools/,
			**/media/,
			**/tracker/,
            **/opensourcephysics/resources/">
            <zipgroupfileset dir="libraries" includes="*.jar" />
		</jar>
	</target>

	<!--docs: generate javadoc documentation-->
	<target name="docs" depends="init">
		<delete dir="${docs}"/>
		<mkdir dir="${docs}"/>
		<javadoc packagenames="org.opensourcephysics.*" destdir="${docs}" encoding="Cp1252">
			<src path="video-engines/src"/>
			<src path="tracker/src"/>
			<src path="osp/src"/>
		</javadoc>
	</target>


	<!-- TESTS -->

	<path id="test.classpath">
		<pathelement path="build/test"/>
		<pathelement path="${classes}"/>
		<fileset dir="${ant.home}/lib" includes="*.jar" />
	</path>

	<target name="compiletests" depends="compile">
		<mkdir dir="${build}/test"/>
		<mkdir dir="${build}/test-report"/>
		<javac destdir="${build}/test" classpathref="test.classpath" srcdir="osp-tests/src" includeantruntime="false">
			<classpath path="${classes}"/>
			<compilerarg value="-Xlint:-serial"/>
		</javac>
	</target>

	<!-- https://junit.org/junit5/docs/snapshot/user-guide/#running-tests-build-ant -->
	<target name="test.junit.launcher" depends="compiletests">
		<junitlauncher haltOnFailure="true" printSummary="true">
			<classpath refid="test.classpath"/>
			<testclasses outputdir="build/test-report">
				<fileset dir="build/test">
					<include name="**/*Tests.class"/>
				</fileset>
				<listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
				<listener type="legacy-plain" sendSysOut="true" />
			</testclasses>
		</junitlauncher>
	</target>

	<!-- https://junit.org/junit5/docs/current/user-guide/#running-tests-console-launcher -->
	<target name="test.console.launcher" depends="compiletests">
		<java classpathref="test.classpath" classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
			<arg value="--scan-classpath"/>
			<arg line="--reports-dir build/test-report"/>
		</java>
		<junitreport todir="build/test-report">
			<fileset dir="build/test-report">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="build/test-report/html"/>
		</junitreport>
	</target>

	<target name="test" depends="test.junit.launcher, test.console.launcher" />

</project>



